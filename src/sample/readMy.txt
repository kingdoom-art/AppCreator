в общем, офигенный xp, давненико так не приходилось думать
в чем суть проект, который мы соддадим и диаграмма классов
по сути отдельные сущности, которые мы свяжем в проге,
но вообще они не зависят друг от друга, то есть в проет можно запихать
еще одну диаграмму, а диаграмму можно юзать и в других проектах
от сюда вытекла проблема, что интерфейс получился слишком сложный,
в самолете проще разобраться, не факт, что завтра я смогу вспомнить, что надо делать
точеннее интерфейс то 1 комбобокс, но действия в нем надо делать в определенной посдледовательности
если общий алгоритм то
1 действия от порядка не зависящие
	1.1 открыть\создать диаграмму классов
	2.1 открыть проект
	_____________________________________
	1.2 открыть\создать диаграмму классов
	2.2 создать проект
2 обновить классы 
	ибо изначально все классы просто создается без полей
	по скольку создание класса в grails обязательно (либо я что-то не знаю)
	и незя просто так вставить в проект готовые классы (ну эт логично, но всеже(
	так вот, создав классы их надо наполнить
3 сохранение классов в проект
	классы просто перезаписываются в .groovy файл
4 запустить батник, который создаст контроллеры и всю нужную приблуду и запустит приложуху

при создании\изменени классов 2 и 3 пункт повторить обязательно, иначе изменения не сохранятся

какие проблемсы были: 
	по скольку цмд вызывалась в отдельном потоке для создания проекта
	я не мог сделать так, чтобы все действия по созданию проекта шили одно за другим
	медот, waitFor который ждет завершения процесса проканал
	пришлось все действия разносить по элементам с действиями комбобокса
	да и все в общем...
	ааа, самое главное не облажатся было сложно, но я справился, ток наоборот
	столько раз приходилось пересоздавать проект (в качестве проверки)
	
в ообщем, одна из самых интересных лаб, что была у меня, пришлось повозится

ааа, отношения из бд реализовал таким образом, что при выборе типа данных
в комбобоксе у поля класса можно выбрать в качестве типа уже существующие классы
комбобокс обновляется при его открытии
